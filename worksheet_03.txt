1.What is missing from this code? (1 pt)

temperature = float(input("Temperature: ")
if temperature > 90:
    print("It is hot outside.")
else:
    print("It is not hot out.")
    
Answer: 

An end ) in line 1.

2. Write a Python program that will take in a number from the user and print if it is positive, negative, or zero. Use a proper if/elif/else chain, don't just use three if statements.

Answer:

number = float(input("Please input a positive number, a negative number or a zero: "))
if number > 0:
    print("Your number is positive!")
elif number == 0: 
    print("Your number is a zero!")
else:
    print("Your number is negative!")
    
3. Write a Python program that will take in a number from a user and print out ``Success'' if it is greater than -10 and less than 10, inclusive. (1 pt)

Answer:

# Input
number = float(input("Please enter a random number! "))
# Calculate
if number <= 10 and number >= -10:
# Output
    print("''Success''")
    
4. This runs, but there is something wrong. What is it? (1 pt)

user_input = input("A cherry is a: ")
print("A. Dessert topping")
print("B. Desert topping")
if user_input.upper() == "A":
    print("Correct!")
else:
    print("Incorrect.")
    
Answer:
Make a new line 4 and move this code to line 4:
user_input = input() # also add the ()
in line 1 add print
Correct code:
print("A cherry is a: ")
print("A. Dessert topping")
print("B. Desert topping")
user_input = input()
if user_input.upper() == "A":
    print("Correct!")
else:
    print("Incorrect.")

5. There are two things wrong with this code that tests if x is set to a positive value. One prevents it from running, and the other is subtle. Make sure the if statement works no matter what x is set to. Identify both issues. (2 pts)

x == 4
if x >= 0:
    print("x is positive.")
else:
    print("x is not positive.")
    
Answer:
First error is that line 1 should be x = 1. x cannot evaluate to 4 before x is assigned a value and will give an error.
Second error: if x >= 0: is syntactically correct, but it is semantically incorrect that 0 is a positive number. The correct code is:
x = 4
if x > 0:
    print("x is positive.")
else:
    print("x is not positive.")
    
6. What three things are wrong with the following code? (3 pts)

x = input("Enter a number: ")
if x = 3
    print("You entered 3")
    
Answer:

1. line 1 needs a float conversion of the input.
2. line 2 conditional statement needs to end with :
3. line 2 the comparison is done with ==. x = 3 is assigning a value.
The correct code:
x = float(input("Enter a number: "))
if x == 3:
    print("You entered 3")


7. There are four things wrong with this code. Identify all four issues. (4 pts)

answer = input("What is the name of Dr. Bunsen Honeydew's assistant? ")
if a = "Beaker":
    print("Correct!")
    else
    print("Incorrect! It is Beaker.")

Answer:

1. if a == "Beaker": # Missing a =
2. if a should be if answer
3. else need to be on same indent as if
3. else statement needs to end with :

Correct code:
answer = input("What is the name of Dr. Bunsen Honeydew's assistant? ")
if answer == "Beaker":
    print("Correct!")
else:
    print("Incorrect! It is Beaker.")
    
8. This program doesn't work correctly. What is wrong? (1 pt)

x = input("How are you today?")
if x == "Happy" or "Glad":
    print("That is good to hear!")
    
Answer:

You need to repeat yourself in the second conditional statement. The interpreter doesnt understand what to do with "Glad".
Correct code:
x = input("How are you today?")
if x == "Happy" or x == "Glad":
    print("That is good to hear!")

9. Look at the code below. Write your best guess here on what it will print. Next, run the code and see if you are correct. Clearly label your guess and the actual answer. Also, if this or any other example results in an error, make sure to state that an error occurred. While you don't need to write an explanation, make sure you understand why the computer prints what it does. Don't get caught flat-footed when you need to know later. (2 pts)

x = 5
y = x == 6
z = x == 5
print("x=", x)
print("y=", y)
print("z=", z)
if y:
    print("Fizz")
if z:
    print("Buzz")

Answer:

My best guess:
x= 5
y= False
z= True
Buzz

Actual answer: All correct:
x= 5
y= False
z= True
Buzz

10. Look at the code below. Write you best guess on what it will print. Next, run the code and see if you are correct. (2 pts)

x = 5
y = 10
z = 10
print(x < y)
print(y < z)
print(x == 5)
print(not x == 5)
print(x != 5)
print(not x != 5)
print(x == "5")
print(5 == x + 0.00000000001)
print(x == 5 and y == 10)
print(x == 5 and y == 5)
print(x == 5 or y == 5)

Answer:

My best guess:
True
False
True
False
False
True
False
False
True
False
True

Actual answer: All Correct:
True
False
True
False
False
True
False
False
True
False
True

11. Look at the code below. Write you best guess on what it will print. Next, run the code and see if you are correct. (2 pts)

print("3" == "3")
print(" 3" == "3")
print(3 < 4)
print(3 < 10)
print("3" < "4")
print("3" < "10")
print( (2 == 2) == "True" )
print( (2 == 2) == True )
print(3 < "3")

Answer:

My best guess:
True
False
True
True
False
False
False
True
False

Actual answer: 2 mistakes.
True
False
True
True
True - Mistake on my guess # print("3" < "4"), but why?
False
False
True

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-23-ce2b8ea3a761> in <module>()
      7 print( (2 == 2) == "True" )
      8 print( (2 == 2) == True )
----> 9 print(3 < "3")

TypeError: '<' not supported between instances of 'int' and 'str'

12. What things are wrong with this section of code? The programmer wants to set the money variable according to the initial occupation the user selects. (1 pt)

print("Welcome to Oregon Trail!")
 
print("A. Banker")
print("B. Carpenter")
print("C. Farmer")
 
user_input = input("What is your occupation? ")
 
if user_input = A:
    money = 100
else if user_input = B:
    money = 70
else if user_input = C:
    money = 50
 
print("Great! you will start the game with", money, "dollars.")

Answer:

The conditional statements need to have == instead of =. Also nice to use the .upper class function. And the conditional statement needs to evaluate a string, so it is "A" instead of A. A would be an undefined variable. Second conditional statement should be elif and the last else. The else statement should not have a condition attached - and just be else:
The correct code could be:

print("Welcome to Oregon Trail!")
 
print("A. Banker")
print("B. Carpenter")
print("C. Farmer")
 
user_input = input("What is your occupation? ")

money = 0 
if user_input.upper() == "A":
    money = 100
elif user_input.upper() == "B":
    money = 70
else:
    money = 50
 
print("Great! you will start the game with", money, "dollars.")